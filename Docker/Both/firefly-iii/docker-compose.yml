# Installation: https://docs.firefly-iii.org/how-to/firefly-iii/installation/docker/

services:
  fireflyiii:
    container_name: fireflyiii
    image: fireflyiii/core:version-6.1.19
    environment:
      - DB_CONNECTION=${FIREFLYIII_DB_CONNECTION}
      - DB_DATABASE=${FIREFLYIII_DB_DATABASE}
      - DB_HOST=${FIREFLYIII_DB_HOST}
      - DB_PASSWORD=${FIREFLYIII_DB_PASSWORD}
      - DB_PORT=${FIREFLYIII_DB_PORT}
      - DB_USERNAME=${FIREFLYIII_DB_USERNAME}
      - FIREFLY_III_LAYOUT=${FIREFLYIII_FIREFLY_III_LAYOUT}
      - TRUSTED_PROXIES=${FIREFLYIII_TRUSTED_PROXIES}
      - TZ=${FIREFLYIII_TZ}
      - APP_KEY=${FIREFLYIII_APP_KEY}
      - APP_URL=${FIREFLYIII_APP_URL}
      - MAIL_MAILER=${FIREFLYIII_MAIL_MAILER}
      - MAIL_HOST=${FIREFLYIII_MAIL_HOST}
      - MAIL_PORT=${FIREFLYIII_MAIL_PORT}
      - MAIL_FROM=${FIREFLYIII_MAIL_FROM}
      - MAIL_USERNAME=${FIREFLYIII_MAIL_USERNAME}
      - MAIL_PASSWORD=${FIREFLYIII_MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${FIREFLYIII_MAIL_ENCRYPTION}
      - SEND_ERROR_MESSAGE=${FIREFLYIII_SEND_ERROR_MESSAGE}
      - STATIC_CRON_TOKEN=${STATIC_CRON_TOKEN}
    ports:
      - 6353:8080
    restart: unless-stopped
    depends_on:
      - fireflyiii-postgres
    volumes:
      - /opt/appdata/firefly-iii/upload:/var/www/html/storage/upload
    networks:
      - proxy

  fireflyiii-postgres:
    image: postgres:17.2-bullseye
    container_name: fireflyiii-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${FIREFLYIII_DB_USERNAME}
      - POSTGRES_PASSWORD=${FIREFLYIII_DB_PASSWORD}
      - POSTGRES_DB=${FIREFLYIII_DB_DATABASE}
    volumes:
      - firefly-postgresql-volume:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - proxy

  fireflyiii-cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    container_name: fireflyiii-cron
    restart: always
    environment:
      - STATIC_CRON_TOKEN=${STATIC_CRON_TOKEN}
    command: sh -c "echo \"0 * * * * wget -qO- http://fireflyiii:8080/api/v1/cron/${STATIC_CRON_TOKEN}\" | crontab - && crond -f -L /dev/stdout"
    depends_on:
      - fireflyiii
    networks:
      - proxy

volumes:
  firefly-postgresql-volume: {}

networks:
  proxy:
    driver: bridge
    external: true
