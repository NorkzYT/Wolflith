# Installation: https://hub.docker.com/r/n8nio/n8n

services:
  n8n:
    image: n8nio/n8n:1.80.1
    container_name: n8n
    environment:
      - DB_TYPE=${N8N_DB_TYPE}
      - DB_POSTGRESDB_HOST=${N8N_DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${N8N_DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${N8N_DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${N8N_DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_POSTGRESDB_PASSWORD}
      - GENERIC_TIMEZONE=${N8N_GENERIC_TIMEZONE}
    ports:
      - 5678:5678
    volumes:
      - /opt/appdata/n8n:/home/node/.n8n
    restart: unless-stopped
    depends_on:
      n8n-postgres:
        condition: service_healthy
    networks:
      - proxy

  n8n-postgres:
    image: postgres:17
    container_name: n8n-postgres
    environment:
      - POSTGRES_USER=${N8N_DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${N8N_DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=${N8N_DB_POSTGRESDB_DATABASE}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h localhost -U ${N8N_DB_POSTGRESDB_USER} -d ${N8N_DB_POSTGRESDB_DATABASE}',
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - n8n-postgresql-volume:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - proxy

volumes:
  n8n-postgresql-volume: {}

networks:
  proxy:
    driver: bridge
    external: true
